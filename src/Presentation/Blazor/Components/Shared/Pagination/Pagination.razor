@if (Books != null && TotalBooks > 0)
{
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            Showing @((CurrentPage - 1) * ItemsPerPage + 1) to @Math.Min(CurrentPage * ItemsPerPage, TotalBooks) of @TotalBooks results
        </div>
        <div class="d-flex align-items-center">
            <label for="itemsPerPage" class="me-2">Items per page:</label>
            <select id="itemsPerPage" class="form-select form-select-sm me-4" style="width: auto;" 
                @onchange="OnItemsPerPageChanged">
                @foreach (var option in ItemsPerPageOptions)
                {
                    <option value="@option" selected="@(option == ItemsPerPage)">@option</option>
                }
            </select>
        </div>
    </div>

    <div class="d-flex justify-content-center mb-4">
        <nav>
            <ul class="pagination">
                <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="javascript:void(0)" @onclick="() => OnPageChanged(CurrentPage - 1)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                
                @if (TotalPages <= MaxPagesToShow)
                {
                    @for (int i = 1; i <= TotalPages; i++)
                    {
                        var pageNumber = i;
                        <li class="page-item @(pageNumber == CurrentPage ? "active" : "")">
                            <a class="page-link" href="javascript:void(0)" @onclick="() => OnPageChanged(pageNumber)">
                                @pageNumber
                            </a>
                        </li>
                    }
                }
                else
                {
                    // Show first page
                    <li class="page-item @(1 == CurrentPage ? "active" : "")">
                        <a class="page-link" href="javascript:void(0)" @onclick="() => OnPageChanged(1)">1</a>
                    </li>
                    
                    // Show ellipsis if current page is not near the beginning
                    @if (CurrentPage > 3)
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href="javascript:void(0)">...</a>
                        </li>
                    }
                    
                    // Show pages around current page
                    @for (int i = Math.Max(2, CurrentPage - 1); i <= Math.Min(TotalPages - 1, CurrentPage + 1); i++)
                    {
                        var pageNumber = i;
                        <li class="page-item @(pageNumber == CurrentPage ? "active" : "")">
                            <a class="page-link" href="javascript:void(0)" @onclick="() => OnPageChanged(pageNumber)">
                                @pageNumber
                            </a>
                        </li>
                    }
                    
                    // Show ellipsis if current page is not near the end
                    @if (CurrentPage < TotalPages - 2)
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href="javascript:void(0)">...</a>
                        </li>
                    }
                    
                    // Show last page
                    <li class="page-item @(TotalPages == CurrentPage ? "active" : "")">
                        <a class="page-link" href="javascript:void(0)" @onclick="() => OnPageChanged(TotalPages)">
                            @TotalPages
                        </a>
                    </li>
                }
                
                <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                    <a class="page-link" href="javascript:void(0)" @onclick="() => OnPageChanged(CurrentPage + 1)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
}
